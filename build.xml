<?xml version="1.0"?>

<project name="D4M_API_JAVA" default="all" basedir=".">
  <property file="${basedir}/default_build.properties"/>

  <import file="${basedir}/build_common_targets.xml"/>

  <target name="init_local" depends="init">
    <filter filtersfile="${base_property_file_name}"/>
    <filter filtersfile="${full_property_file_name}"/>
    <filter token="version_number" value="${version_number}"/>
  	
    <mkdir dir="${build.dir}/classes"/>
    <copy todir="${build.dir}/classes" filtering="true">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java"/>
        <exclude name="**/build.xml"/>
        <exclude name="**/*.jpx"/>
      </fileset>
    </copy>
    <copy todir="${build.dir}/dist/lib">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy todir="${dist.dir}" filtering="true">
        <fileset dir="${basedir}">
          <include name="conf/**"/>
        </fileset>
    </copy>    
    <copy todir="${dist.dir}">
      <fileset dir=".">
        <include name="README.txt" />
      </fileset>
    </copy>  	
    <copy todir="${build.dir}/classes" filtering="true">
        <fileset dir="${basedir}/conf">
          <include name="**/log4j.xml"/>
        </fileset>
    </copy>
    <copy todir="${dist.dir}/docs">
      <fileset dir="${basedir}/docs" />
    </copy>
    <copy todir="${dist.dir}/bin" >
       <fileset dir="${basedir}/scripts">
           <include name="**"/>
       </fileset>
    </copy>    
    <chmod dir="${dist.dir}/bin" perm="uag+x" includes="**/*.sh"/>
  </target>

  <!-- must call init_local from the local build.xml file before invoking build_jar which depends on compile -->
  <target name="compile" depends="init_local">
    <javac debug="true" debuglevel="lines,vars,source" compiler="javac1.6" fork="yes" memorymaximumsize="500M" 
      srcdir="${src.dir}" destdir="${build.dir}/classes" classpathref="master_classpath"/>
  </target>
  
  <target name="build_jar" depends="compile">
    <jar destfile="${dist.dir}/lib/${ant.project.name}.jar">
         <fileset dir="${build.dir}/classes"/>
         <fileset file="${dist.dir}/VERSION"/>  
    </jar>
  </target>

	<target name="all" depends="clean, build_jar, build_distribution" description="Build a distribution of the whole software package"/>
	
</project>
