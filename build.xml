<?xml version="1.0" encoding="UTF-8"?>

<project name="D4M_API_JAVA" default="all" basedir=".">
  <property file="${basedir}/default_build.properties"/>

  <import file="${basedir}/build_common_targets.xml"/>

  <target name="init_local" depends="init">
    <filter filtersfile="${base_property_file_name}"/>
    <filter filtersfile="${full_property_file_name}"/>
    <filter token="version_number" value="${version_number}"/>
  	
    <mkdir dir="${build.dir}/classes"/>
    <mkdir dir="${dist.dir}/bin"/>
    <copy todir="${build.dir}/classes" filtering="true">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java"/>
        <exclude name="**/build.xml"/>
        <exclude name="**/*.jpx"/>
      </fileset>
    </copy>
    <copy todir="${build.dir}/dist/lib">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy todir="${dist.dir}" filtering="true">
        <fileset dir="${basedir}">
          <include name="conf/**"/>
        </fileset>
    </copy>    
    <copy todir="${dist.dir}">
      <fileset dir=".">
        <include name="README.txt" />
      </fileset>
    </copy>  	
    <copy todir="${build.dir}/classes/" filtering="true">
        <fileset dir="${basedir}/conf">
          <include name="**/log4j.xml"/>
          <include name="**/*.properties"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/classes/" filtering="true">
        <fileset dir="${basedir}/conf">

        </fileset>
    </copy>
    <copy todir="${dist.dir}/docs">
      <fileset dir="${basedir}/docs" />
    </copy>

    <chmod dir="${dist.dir}/bin" perm="uag+x" includes="**/*.sh"/>
  </target>

  <!-- must call init_local from the local build.xml file before invoking build_jar which depends on compile -->
  <target name="compile" depends="init_local">
    <javac debug="true" debuglevel="lines,vars,source" compiler="javac1.6" fork="yes" memorymaximumsize="500M" 
      source="1.6" target="1.6" includeantruntime="false" encoding="UTF-8"
      srcdir="${src.dir}" destdir="${build.dir}/classes" classpathref="master_classpath" />
  </target>
  <target name="compile-test" depends="init_local">
    <javac debug="true" debuglevel="lines,vars,source" source="1.6" target="1.6"  encoding="UTF-8"
      compiler="javac1.6" fork="yes" memorymaximumsize="500M" includeantruntime="false"  
      srcdir="${test_src.dir}" destdir="${build.dir}/classes" classpathref="master_classpath"/>
    <antcall target="build_jar">
        <param name="jar.name" value="${ant.project.name}-test"/>
    </antcall>
  </target>
  
  <target name="build_jar" depends="compile">
    <property name="jar.name" value="${ant.project.name}"/>
    <echo message="Build D4M common jar "/>
    <jar destfile="${dist.dir}/lib/${jar.name}.jar" encoding="UTF-8">
         <fileset dir="${build.dir}/classes">
            <include name="**/*.class"/>
            <exclude name="**/cloud/accumulo/*Accumulo*.class"/>
         </fileset>
         <fileset file="${dist.dir}/VERSION"/>  
    </jar>
    <echo message="Build D4M accumulo jar "/>
    <jar destfile="${dist.dir}/lib/${jar.name}_AC.jar" encoding="UTF-8">
         <fileset dir="${build.dir}/classes" includes="**/accumulo/*Accumulo*.class"/>
         <fileset file="${dist.dir}/VERSION"/>  
         <fileset file="${build.dir}/classes/log4j.xml"/>  
    </jar>

  </target>

	<target name="all" depends="clean, build_jar, build_distribution" description="Build a distribution of the whole software package"/>

  <target name="tar-all" depends="clean, build_jar, get_version" >
     <tar destfile="${build.dir}/${ant.project.name}_${version_number}.tar.gz">
          <tarfileset dir="${dist.dir}/bin" filemode="755">
             <include name="*.sh"/>
          </tarfileset>
          <tarfileset dir="${dist.dir}" prefix="${ant.project.name}_${version_number}">
             <include name="**/**"/>
          </tarfileset>
     </tar>
  </target>	

  <target name="junit_all" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="withOutAndErr" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Dtitle=${title}"/>
      <jvmarg value="-Dlog4j.configuration=${log_4_j_config_file}"/>      
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${test.reports}">
        <fileset dir="${build.dir}/classes">
           <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>

  <target name="junit-d4mquery" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest5" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest6" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>
  <target name="junit-d4mquery7" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest7" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>

  <target name="junit-d4mquery8" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest8" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest9" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>
<!--       <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest6" fork="yes" todir="${test.reports}"> -->
<!--          <formatter type="plain"/> -->
<!--       </test> -->

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>

    <target name="junit-d4mquery10" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mQueryTest10" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>
 

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>


  <target name="junit-d4mquery-rowcol" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQuerySearchRowAndColTest" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>

  <target name="junit-batch-d4mquery" depends="compile,compile-test">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="master_classpath"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${test.reports}">
        <fileset dir="${build.dir}/classes">
           <include name="**/D4mDbQueryTest.class"/>
           <include name="**/D4mDbQueryTest5.class"/>
           <include name="**/D4mDbQueryTest6.class"/>
        </fileset>
      </batchtest>


<!--       <test name="edu.mit.ll.d4m.db.cloud.test.D4mDbQueryTest5" fork="yes" todir="${test.reports}"> -->
<!--          <formatter type="plain"/> -->
<!--       </test> -->
    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>

  <target name="junit-accumulo-split-info" depends="compile,compile-test"  description="Test for split information : splits, number of splits,tablet server containing splits">
    <mkdir dir="${test.reports}"/>

    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
      <jvmarg value="-Dlogging.path=${logging.path}"/>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <classpath refid="accumulo_classpath"/>
      <formatter type="plain"/>
      <test name="edu.mit.ll.d4m.db.cloud.test.TestAccumuloSplitInfo" fork="yes" todir="${test.reports}">
         <formatter type="plain"/>
      </test>

    </junit>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.txt"/>
      </fileset>
      <report todir="${test.reports}"/>
    </junitreport>
  </target>
  

</project>
